/*
 * Vision
 * Sphereon Vision APIs
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.vision.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.sphereon.sdk.vision.model.VisionSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The Vision job. Has access to the job settings.
 */
@ApiModel(description = "The Vision job. Has access to the job settings.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-23T00:44:43.745+02:00")
public class VisionJob {
  @SerializedName("completionTime")
  private OffsetDateTime completionTime = null;

  @SerializedName("jobId")
  private String jobId = null;

  @SerializedName("settings")
  private VisionSettings settings = null;

  @SerializedName("creationTime")
  private OffsetDateTime creationTime = null;

  @SerializedName("inputs")
  private Map<String, String> inputs = new HashMap<String, String>();

  @SerializedName("updateTime")
  private OffsetDateTime updateTime = null;

  /**
   * The status of the job
   */
  public enum StateEnum {
    @SerializedName("INPUTS_UPLOADED")
    INPUTS_UPLOADED("INPUTS_UPLOADED"),
    
    @SerializedName("PROCESSING")
    PROCESSING("PROCESSING"),
    
    @SerializedName("DONE")
    DONE("DONE"),
    
    @SerializedName("ERROR")
    ERROR("ERROR"),
    
    @SerializedName("DELETED")
    DELETED("DELETED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("queueTime")
  private OffsetDateTime queueTime = null;

   /**
   * The completion date/time of this job in ISO 8601 format
   * @return completionTime
  **/
  @ApiModelProperty(example = "null", value = "The completion date/time of this job in ISO 8601 format")
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public VisionJob jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }

  public VisionJob settings(VisionSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @ApiModelProperty(example = "null", value = "")
  public VisionSettings getSettings() {
    return settings;
  }

  public void setSettings(VisionSettings settings) {
    this.settings = settings;
  }

   /**
   * The creation date/time of this job in ISO 8601 format
   * @return creationTime
  **/
  @ApiModelProperty(example = "null", value = "The creation date/time of this job in ISO 8601 format")
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public VisionJob inputs(Map<String, String> inputs) {
    this.inputs = inputs;
    return this;
  }

  public VisionJob putInputsItem(String key, String inputsItem) {
    this.inputs.put(key, inputsItem);
    return this;
  }

   /**
   * The input images. Currently supported inputs are: jpeg, png, bmp
   * @return inputs
  **/
  @ApiModelProperty(example = "null", required = true, value = "The input images. Currently supported inputs are: jpeg, png, bmp")
  public Map<String, String> getInputs() {
    return inputs;
  }

  public void setInputs(Map<String, String> inputs) {
    this.inputs = inputs;
  }

   /**
   * The last update date/time of this job in ISO 8601 format
   * @return updateTime
  **/
  @ApiModelProperty(example = "null", value = "The last update date/time of this job in ISO 8601 format")
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

   /**
   * The status of the job
   * @return state
  **/
  @ApiModelProperty(example = "null", required = true, value = "The status of the job")
  public StateEnum getState() {
    return state;
  }

   /**
   * The queue date/time of this job in ISO 8601 format
   * @return queueTime
  **/
  @ApiModelProperty(example = "null", value = "The queue date/time of this job in ISO 8601 format")
  public OffsetDateTime getQueueTime() {
    return queueTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VisionJob visionJob = (VisionJob) o;
    return Objects.equals(this.completionTime, visionJob.completionTime) &&
        Objects.equals(this.jobId, visionJob.jobId) &&
        Objects.equals(this.settings, visionJob.settings) &&
        Objects.equals(this.creationTime, visionJob.creationTime) &&
        Objects.equals(this.inputs, visionJob.inputs) &&
        Objects.equals(this.updateTime, visionJob.updateTime) &&
        Objects.equals(this.state, visionJob.state) &&
        Objects.equals(this.queueTime, visionJob.queueTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionTime, jobId, settings, creationTime, inputs, updateTime, state, queueTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VisionJob {\n");
    
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    queueTime: ").append(toIndentedString(queueTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

