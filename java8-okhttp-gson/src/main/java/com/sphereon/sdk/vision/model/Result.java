/*
 * Vision
 * Sphereon Vision APIs
 *
 * OpenAPI spec version: 0.2
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sphereon.sdk.vision.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sphereon.sdk.vision.model.Tag;
import com.sphereon.sdk.vision.model.VendorResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Result
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-09T14:08:09.031+01:00")
public class Result {
  @SerializedName("filename")
  private String filename = null;

  @SerializedName("vendorResults")
  private Map<String, VendorResult> vendorResults = null;

  @SerializedName("labels")
  private List<Tag> labels = null;

  @SerializedName("ocr")
  private List<Tag> ocr = null;

   /**
   * The input filename.
   * @return filename
  **/
  @ApiModelProperty(value = "The input filename.")
  public String getFilename() {
    return filename;
  }

  public Result vendorResults(Map<String, VendorResult> vendorResults) {
    this.vendorResults = vendorResults;
    return this;
  }

  public Result putVendorResultsItem(String key, VendorResult vendorResultsItem) {
    if (this.vendorResults == null) {
      this.vendorResults = new HashMap<>();
    }
    this.vendorResults.put(key, vendorResultsItem);
    return this;
  }

   /**
   * The results for specific vendor.
   * @return vendorResults
  **/
  @ApiModelProperty(value = "The results for specific vendor.")
  public Map<String, VendorResult> getVendorResults() {
    return vendorResults;
  }

  public void setVendorResults(Map<String, VendorResult> vendorResults) {
    this.vendorResults = vendorResults;
  }

  public Result labels(List<Tag> labels) {
    this.labels = labels;
    return this;
  }

  public Result addLabelsItem(Tag labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * The labels that are predicted on the input.
   * @return labels
  **/
  @ApiModelProperty(value = "The labels that are predicted on the input.")
  public List<Tag> getLabels() {
    return labels;
  }

  public void setLabels(List<Tag> labels) {
    this.labels = labels;
  }

  public Result ocr(List<Tag> ocr) {
    this.ocr = ocr;
    return this;
  }

  public Result addOcrItem(Tag ocrItem) {
    if (this.ocr == null) {
      this.ocr = new ArrayList<>();
    }
    this.ocr.add(ocrItem);
    return this;
  }

   /**
   * The ocr result that are found on the input. 
   * @return ocr
  **/
  @ApiModelProperty(value = "The ocr result that are found on the input. ")
  public List<Tag> getOcr() {
    return ocr;
  }

  public void setOcr(List<Tag> ocr) {
    this.ocr = ocr;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result result = (Result) o;
    return Objects.equals(this.filename, result.filename) &&
        Objects.equals(this.vendorResults, result.vendorResults) &&
        Objects.equals(this.labels, result.labels) &&
        Objects.equals(this.ocr, result.ocr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filename, vendorResults, labels, ocr);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result {\n");
    
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    vendorResults: ").append(toIndentedString(vendorResults)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    ocr: ").append(toIndentedString(ocr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

