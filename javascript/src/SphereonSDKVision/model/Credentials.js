/**
 * Vision
 * Sphereon Vision APIs
 *
 * OpenAPI spec version: 0.2
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['SphereonSDKVision/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Vision) {
      root.Vision = {};
    }
    root.Vision.Credentials = factory(root.Vision.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Credentials model module.
   * @module SphereonSDKVision/model/Credentials
   * @version 0.2
   */

  /**
   * Constructs a new <code>Credentials</code>.
   * @alias module:SphereonSDKVision/model/Credentials
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>Credentials</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:SphereonSDKVision/model/Credentials} obj Optional instance to populate.
   * @return {module:SphereonSDKVision/model/Credentials} The populated <code>Credentials</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('credentialType')) {
        obj['credentialType'] = ApiClient.convertToType(data['credentialType'], 'String');
      }
      if (data.hasOwnProperty('authenticationProvider')) {
        obj['authenticationProvider'] = ApiClient.convertToType(data['authenticationProvider'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:SphereonSDKVision/model/Credentials.CredentialTypeEnum} credentialType
   */
  exports.prototype['credentialType'] = undefined;
  /**
   * @member {module:SphereonSDKVision/model/Credentials.AuthenticationProviderEnum} authenticationProvider
   */
  exports.prototype['authenticationProvider'] = undefined;


  /**
   * Allowed values for the <code>credentialType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CredentialTypeEnum = {
    /**
     * value: "NoCredentials"
     * @const
     */
    "NoCredentials": "NoCredentials",
    /**
     * value: "OAuthCredentials"
     * @const
     */
    "OAuthCredentials": "OAuthCredentials",
    /**
     * value: "BearerTokenCredentials"
     * @const
     */
    "BearerTokenCredentials": "BearerTokenCredentials",
    /**
     * value: "UsernamePasswordCredentials"
     * @const
     */
    "UsernamePasswordCredentials": "UsernamePasswordCredentials",
    /**
     * value: "OAuth2ClientCredentials"
     * @const
     */
    "OAuth2ClientCredentials": "OAuth2ClientCredentials"  };

  /**
   * Allowed values for the <code>authenticationProvider</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AuthenticationProviderEnum = {
    /**
     * value: "API_SUPPLIER"
     * @const
     */
    "SUPPLIER": "API_SUPPLIER",
    /**
     * value: "API_IMPLEMENTER"
     * @const
     */
    "IMPLEMENTER": "API_IMPLEMENTER"  };


  return exports;
}));


