{
  "basePath": "/",
  "paths": {
    "/barcode/0.1/": {"post": {
      "summary": "Create a new vision job",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Create a new job for the vision operation",
      "operationId": "createVisionJob",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/VisionJob"},
          "description": "Vision job"
        },
        "201": {
          "schema": {"$ref": "#/definitions/VisionJob"},
          "description": "Created"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid vision settings"
        }
      },
      "parameters": [{
        "schema": {"$ref": "#/definitions/VisionSettings"},
        "in": "body",
        "name": "visionSettings",
        "description": "visionSettings",
        "required": true
      }],
      "tags": ["Vision"],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/barcode/0.1/{jobid}/result": {"get": {
      "summary": "Get classification response of a vision job",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Get classification response of a vision job that completed the classification",
      "operationId": "getClassificationResult",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/ClassificationResponse"},
          "description": "Vision job classified"
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Classification request could not be processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id. No response body is supplied"
        }
      },
      "parameters": [{
        "in": "path",
        "name": "jobid",
        "description": "jobid",
        "type": "string",
        "required": true
      }],
      "tags": ["Vision"],
      "consumes": ["application/json"]
    }},
    "/barcode/0.1/{jobid}": {
      "post": {
        "summary": "Upload an image for a vision job",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Upload an image for a vision job. Processing will not be started yet.",
        "operationId": "uploadFile",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/VisionJob"},
            "description": "Image uploaded. The vision job response will be returned in the body."
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Image for vision job could not be stored/processed"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "jobid",
            "description": "jobid",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "stream",
            "description": "The binary image to upload for a vision job",
            "type": "file",
            "required": true
          }
        ],
        "tags": ["Vision"],
        "consumes": ["multipart/form-data"]
      },
      "get": {
        "summary": "Get a vision job",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get a Vision job",
        "operationId": "getVisionJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/VisionJob"},
            "description": "Vision job"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Vision job not found"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Vision"],
        "consumes": ["application/json"]
      },
      "delete": {
        "summary": "Delete a vision job manually",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete a vision job manually",
        "operationId": "deleteVisionJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/VisionJob"},
            "description": "Vision job deleted"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Vision job failed to delete"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Vision job was already deleted or unknown job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Vision"],
        "consumes": ["application/json"]
      },
      "put": {
        "summary": "Start classification of a vision job",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Start classification of a vision job",
        "operationId": "classifyJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/VisionJob"},
            "description": "Classification started. The vision job response will be returned in the body."
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Classification request could not be processed"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id. No response body is supplied"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobid",
          "description": "jobid",
          "type": "string",
          "required": true
        }],
        "tags": ["Vision"],
        "consumes": ["application/json"]
      }
    }
  },
  "host": "gw.api.cloud.sphereon.com",
  "schemes": ["https"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://gw.api.cloud.sphereon.com/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "VisionJob": {
      "description": "The Vision job. Has access to the job settings.",
      "type": "object",
      "required": [
        "inputs",
        "state"
      ],
      "properties": {
        "completionTime": {
          "format": "date-time",
          "description": "The completion date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "jobId": {"type": "string"},
        "settings": {"$ref": "#/definitions/VisionSettings"},
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "inputs": {
          "description": "The input images. Currently supported inputs are: jpeg, png, bmp",
          "additionalProperties": {"type": "string"},
          "type": "object"
        },
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "The status of the job",
          "readOnly": true,
          "type": "string",
          "enum": [
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        },
        "queueTime": {
          "format": "date-time",
          "description": "The queue date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "An error",
      "type": "object",
      "required": [
        "code",
        "level",
        "message"
      ],
      "properties": {
        "code": {"type": "string"},
        "level": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "FATAL"
          ]
        },
        "cause": {"$ref": "#/definitions/Error"},
        "message": {"type": "string"}
      }
    },
    "ClassificationResponse": {
      "type": "object",
      "properties": {
        "tagList": {
          "additionalProperties": {
            "type": "array",
            "items": {"$ref": "#/definitions/Tag"}
          },
          "type": "object"
        },
        "jobId": {"type": "string"},
        "job": {
          "description": "The vision job",
          "readOnly": true,
          "$ref": "#/definitions/VisionJob"
        },
        "errors": {
          "description": "The errors that occurred",
          "readOnly": true,
          "type": "array",
          "items": {"type": "string"}
        }
      }
    },
    "Tag": {
      "description": "Vision classification tag",
      "type": "object",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "The confidence the tag is predicted",
          "readOnly": true,
          "type": "number"
        },
        "name": {
          "description": "The name of the tag",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "VisionSettings": {
      "description": "Vision settings",
      "type": "object",
      "properties": {
        "storageProvider": {
          "type": "string",
          "enum": ["API_SUPPLIER"]
        },
        "vendor": {
          "type": "string",
          "enum": [
            "google",
            "microsoft",
            "clarifai"
          ]
        },
        "detectionTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LABEL",
              "TEXT",
              "FACIAL",
              "LOGO"
            ]
          }
        }
      }
    },
    "ErrorResponse": {
      "description": "The error response",
      "type": "object",
      "properties": {"errors": {
        "type": "array",
        "items": {"$ref": "#/definitions/Error"}
      }}
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "description": "Sphereon Vision APIs",
    "termsOfService": "https://sphereon.com",
    "title": "Vision",
    "version": "0.1"
  },
  "tags": [{
    "name": "Vision",
    "description": "Vision related API"
  }]
}